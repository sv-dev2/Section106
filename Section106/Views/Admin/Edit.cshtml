@model Section106.Models.Models.RequestVM
@using Section106.Models
@using Section106.Models.Enums

<div class="row form-group">
    <div class="col-md-12">
        <div class="dashboard-title">
            <h3>Edit Request</h3>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6 text-left">
        <a class="btn btn-default" href="@Url.Action("Index", "Admin")">Back To List</a>
    </div>
    <div class="col-md-6 text-right">
        @*<button type="button" onclick="setProjectLog()">Test</button>*@
    </div>
</div>

<div class="row margin-top30 form-horizontal">
    <div class="col-md-12">
        @using (Html.BeginForm("UpdateRequest", "Admin", FormMethod.Post, new { role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.RequestId)
            @Html.HiddenFor(m => m.Status)
            @Html.HiddenFor(m => m.ProjectDate)
            @Html.HiddenFor(m => m.SubmittingContact.StateId, new { @class = "SubmittingStateId" })
            @Html.HiddenFor(m => m.SubmittingContact.CountyId, new { @class = "SubmittingCountyId" })
            @Html.Hidden("AttachmentList")

            <div class="row form-group">
                <div class="col-md-12">
                    <div class="section-box">
                        <h2>Project Name and Location</h2>

                        <div class="row form-group">
                            <div class="col-md-4">
                                <div class="section-col-box-h265">
                                    @*<div class="row form-group">
                                            <div class="col-md-12">
                                                <label>
                                                    <span class="chk_box">@Html.CheckBoxFor(m => m.IsNewSubmission, new { @class = "request_chk", @onchange = "setProjectLog()" })</span>
                                                    <span class="chk_txt">Check if this is new submittal</span>
                                                </label>
                                            </div>
                                        </div>*@
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ProjectLogNumber)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.ProjectLogNumber, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ProjectDateStr)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.ProjectDateStr, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                            @Html.ValidationMessageFor(m => m.ProjectDateStr, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ProjectName)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.ProjectName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="section-col-box-h265">
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ProjectAddress1)
                                            @Html.EditorFor(m => m.ProjectAddress1, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.ProjectAddress1, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ProjectAddress2)
                                            @Html.EditorFor(m => m.ProjectAddress2, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.ProjectAddress2, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ProjectCountyId)
                                            @Html.DropDownListFor(m => m.ProjectCountyId, new SelectList(Model.Counties, "Value", "Text"), "Select County", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ProjectCountyId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="col-md-4">
                                <div class="section-col-box-h265">
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ProjectCityId)
                                            @Html.DropDownListFor(m => m.ProjectCityId, new SelectList(Model.Cities, "Value", "Text"), "Select City", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ProjectCityId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ProjectZip)
                                            @Html.EditorFor(m => m.ProjectZip, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.ProjectZip, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row form-group">
                <div class="col-md-12">
                    <div class="section-box">
                        <h2>Submitting Contact</h2>

                        <div class="row form-group">
                            <div class="col-md-4">
                                <div class="section-col-box">
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.SubmittingContact.Name)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.SubmittingContact.Name, new { htmlAttributes = new { @class = "form-control SubmittingName", @readonly = true } })
                                            @Html.ValidationMessageFor(m => m.SubmittingContact.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.SubmittingContact.Company)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.SubmittingContact.Company, new { htmlAttributes = new { @class = "form-control SubmittingCompany", @readonly = true } })
                                            @Html.ValidationMessageFor(m => m.SubmittingContact.Company, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.SubmittingContact.Email)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.SubmittingContact.Email, new { htmlAttributes = new { @class = "form-control SubmittingEmail", @readonly = true } })
                                            @Html.ValidationMessageFor(m => m.SubmittingContact.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.SubmittingContact.CountyName)
                                            @Html.EditorFor(m => m.SubmittingContact.CountyName, new { htmlAttributes = new { @class = "form-control SubmittingCity", @readonly = true } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="section-col-box">
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.SubmittingContact.Address1)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.SubmittingContact.Address1, new { htmlAttributes = new { @class = "form-control SubmittingAddress1", @readonly = true } })
                                            @Html.ValidationMessageFor(m => m.SubmittingContact.Address1, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.SubmittingContact.Address2)
                                            @Html.EditorFor(m => m.SubmittingContact.Address2, new { htmlAttributes = new { @class = "form-control SubmittingAddress2", @readonly = true } })
                                            @Html.ValidationMessageFor(m => m.SubmittingContact.Address2, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.SubmittingContact.StateName)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.SubmittingContact.StateName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @*@Html.DropDownListFor(m => m.SubmittingContact.StateId, new SelectList(Model.States, "Value", "Text"), "Select State", new { @class = "form-control SubmittingStateId", @readonly = true })*@
                                            @Html.ValidationMessageFor(m => m.SubmittingContact.StateId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.SubmittingContact.City)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.SubmittingContact.City, new { htmlAttributes = new { @class = "form-control SubmittingCity", @readonly = true } })
                                            @Html.ValidationMessageFor(m => m.SubmittingContact.City, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="section-col-box">

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.SubmittingContact.Zip)
                                            @Html.EditorFor(m => m.SubmittingContact.Zip, new { htmlAttributes = new { @class = "form-control SubmittingZip", @readonly = true } })
                                            @Html.ValidationMessageFor(m => m.SubmittingContact.Zip, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.SubmittingContact.MobileNumber)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.SubmittingContact.MobileNumber, new { htmlAttributes = new { @class = "form-control SubmittingMobileNumber", @readonly = true } })
                                            @Html.ValidationMessageFor(m => m.SubmittingContact.MobileNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.SubmittingContact.OfficeNumber)
                                            @Html.EditorFor(m => m.SubmittingContact.OfficeNumber, new { htmlAttributes = new { @class = "form-control SubmittingOfficeNumber", @readonly = true } })
                                            @Html.ValidationMessageFor(m => m.SubmittingContact.OfficeNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.SubmittingContact.Fax)
                                            @Html.EditorFor(m => m.SubmittingContact.Fax, new { htmlAttributes = new { @class = "form-control SubmittingFax", @readonly = true } })
                                            @Html.ValidationMessageFor(m => m.SubmittingContact.Fax, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                </div>

                            </div>
                        </div>
                    </div>


                </div>
            </div>

            <div class="row form-group applicantBox">
                <div class="col-md-12">
                    <div class="section-box">
                        <h2>Applicant Contact</h2>

                        <div class="row form-group">
                            <div class="col-md-4">
                                <div class="section-col-box">
                                    <br />
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>
                                                <span class="chk_box">@Html.CheckBoxFor(m => m.IsApplicantSameAsSubmitting, new { @class = "request_chk", @onchange = "setSameApplicantAddress()" })</span>
                                                <span class="chk_txt">Check if same as above</span>
                                            </label>
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ApplicantContact.Name)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.ApplicantContact.Name, new { htmlAttributes = new { @class = "form-control ApplicantName" } })
                                            @Html.ValidationMessageFor(m => m.ApplicantContact.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ApplicantContact.Company)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.ApplicantContact.Company, new { htmlAttributes = new { @class = "form-control ApplicantCompany" } })
                                            @Html.ValidationMessageFor(m => m.ApplicantContact.Company, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ApplicantContact.Email)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.ApplicantContact.Email, new { htmlAttributes = new { @class = "form-control ApplicantEmail" } })
                                            @Html.ValidationMessageFor(m => m.ApplicantContact.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ApplicantContact.CountyId)
                                            @Html.DropDownListFor(m => m.ApplicantContact.CountyId, new SelectList(Model.Counties, "Value", "Text"), "Select State", new { @class = "form-control ApplicantStateId"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="section-col-box">
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ApplicantContact.Address1)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.ApplicantContact.Address1, new { htmlAttributes = new { @class = "form-control ApplicantAddress1" } })
                                            @Html.ValidationMessageFor(m => m.ApplicantContact.Address1, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ApplicantContact.Address2)
                                            @Html.EditorFor(m => m.ApplicantContact.Address2, new { htmlAttributes = new { @class = "form-control ApplicantAddress2" } })
                                            @Html.ValidationMessageFor(m => m.ApplicantContact.Address2, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ApplicantContact.StateId)
                                            <span class="text-danger">*</span>
                                            @Html.DropDownListFor(m => m.ApplicantContact.StateId, new SelectList(Model.States, "Value", "Text"), "Select State", new { @class = "form-control ApplicantStateId" })
                                            @Html.ValidationMessageFor(m => m.ApplicantContact.StateId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ApplicantContact.City)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.ApplicantContact.City, new { htmlAttributes = new { @class = "form-control ApplicantCity" } })
                                            @Html.ValidationMessageFor(m => m.ApplicantContact.City, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                </div>

                            </div>
                            <div class="col-md-4">
                                <div class="section-col-box">
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ApplicantContact.Zip)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.ApplicantContact.Zip, new { htmlAttributes = new { @class = "form-control ApplicantZip" } })
                                            @Html.ValidationMessageFor(m => m.ApplicantContact.Zip, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ApplicantContact.OfficeNumber)
                                            <span class="text-danger">*</span>
                                            @Html.EditorFor(m => m.ApplicantContact.OfficeNumber, new { htmlAttributes = new { @class = "form-control ApplicantOfficeNumber" } })
                                            @Html.ValidationMessageFor(m => m.ApplicantContact.OfficeNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ApplicantContact.MobileNumber)
                                            @Html.EditorFor(m => m.ApplicantContact.MobileNumber, new { htmlAttributes = new { @class = "form-control ApplicantMobileNumber" } })
                                            @Html.ValidationMessageFor(m => m.ApplicantContact.MobileNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ApplicantContact.Fax)
                                            @Html.EditorFor(m => m.ApplicantContact.Fax, new { htmlAttributes = new { @class = "form-control ApplicantFax" } })
                                            @Html.ValidationMessageFor(m => m.ApplicantContact.Fax, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                </div>

                            </div>
                        </div>
                    </div>


                </div>
            </div>

            <div class="row form-group">
                <div class="col-md-12">
                    <div class="section-box">
                        <h2>Project Description</h2>

                        <div class="row form-group">
                            <div class="col-md-12">
                                <div class="section-col-box-noheight">
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.ProjectDescription)
                                            <span class="text-danger">*</span>
                                            @Html.TextAreaFor(m => m.ProjectDescription, 10, 0, new { @class = "form-control", @onkeyup = "textCounter(this,'counter',500);" })
                                            <div style="float:right">
                                                <span> Characters Remaining: </span><span id="counter">500</span>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.ProjectDescription, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row form-group">
                <div class="col-md-12">
                    <div class="section-box">
                        <div class="row form-group">
                            <div class="col-md-4">
                                <div class="section-col-box">
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.Longitude)
                                            @Html.EditorFor(m => m.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.Longitude, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.Latitude)
                                            @Html.EditorFor(m => m.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.Latitude, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.TownShip)
                                            @Html.EditorFor(m => m.TownShip, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.TownShip, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.Range)
                                            @Html.EditorFor(m => m.Range, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.Range, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.Section)
                                            @Html.EditorFor(m => m.Section, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.Section, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="section-col-box">
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>Location (Check all that apply)</label>
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>
                                                <span class="chk_box">@Html.CheckBoxFor(m => m.IsFederalProperty, new { @class = "request_chk" })</span>
                                                <span class="chk_txt">Federal Property</span>
                                            </label>
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>
                                                <span class="chk_box">@Html.CheckBoxFor(m => m.IsStateProperty, new { @class = "request_chk" })</span>
                                                <span class="chk_txt">State Property</span>
                                            </label>
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>
                                                <span class="chk_box">@Html.CheckBoxFor(m => m.IsMunicipalProperty, new { @class = "request_chk" })</span>
                                                <span class="chk_txt">Municipal Property</span>
                                            </label>
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>
                                                <span class="chk_box">@Html.CheckBoxFor(m => m.IsPrivateProperty, new { @class = "request_chk" })</span>
                                                <span class="chk_txt">Private Property</span>
                                            </label>
                                        </div>
                                    </div>

                                </div>

                            </div>
                            <div class="col-md-4">
                                <div class="section-col-box">
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.AgencyId)
                                            <span class="text-danger">*</span>
                                            @Html.DropDownListFor(m => m.AgencyId, new SelectList(Model.Agencies, "Value", "Text"), "Select Agency", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.AgencyId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.AgencyProjectNumber)
                                            @Html.EditorFor(m => m.AgencyProjectNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.AgencyProjectNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*<div class="row form-group">
                    <div class="col-md-12">
                        <div class="section-box">
                            <div class="row form-group">
                                <div class="col-md-12">
                                    <div class="section-col-box-noheight">

                                        <div class="row form-group">
                                            <div class="col-md-10">
                                                <h4>PropertyFederal / State Agencies / Programs providing Funds, Permits, or Licenses:</h4>
                                            </div>
                                            <div class="col-md-2 text-right">
                                                <button type="button" class="btn btn-info">Add</button>
                                            </div>
                                        </div>

                                        <div class="row form-group">
                                            <div class="col-md-12">
                                                <div class="table-responsive">
                                                    <table class="table table-striped">
                                                        <thead>
                                                            <tr>
                                                                <th>Project Number</th>
                                                                <th>Request Name</th>
                                                                <th>Submittal Date</th>
                                                                <th>Status</th>
                                                                <th class="action_100">Action</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td>Text</td>
                                                                <td>Text</td>
                                                                <td>Date</td>
                                                                <td>Saved</td>
                                                                <td>
                                                                    <ul class="list-inline">
                                                                        <li>
                                                                            <a href="" title="Edit" class="btn btn-primary btn-xs"><i class="fa fa-pencil"></i></a>
                                                                        </li>
                                                                        <li>
                                                                            <a href="" title="Delete" class="btn btn-danger btn-xs"><i class="fa fa-close"></i></a>
                                                                        </li>
                                                                    </ul>
                                                                </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row form-group">
                                            <div class="col-md-6 pull-left">
                                                <h4 class="records_disp">Showing 1 to 5 of 5 entries</h4>
                                            </div>
                                            <div class="col-md-6">
                                                <ul class="pagination pull-right">
                                                    <li class="page-item disabled">
                                                        <a class="page-link" href="#" tabindex="-1">Previous</a>
                                                    </li>

                                                    <li class="page-item active">
                                                        <a class="page-link" href="#">1 <span class="sr-only">(current)</span></a>
                                                    </li>

                                                    <li class="page-item">
                                                        <a class="page-link" href="#">Next</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>*@

            <div class="row form-group">
                <div class="col-md-12">
                    <div class="section-box">
                        <h2>Proposed Work</h2>
                        <div class="row form-group">
                            <div class="col-md-4">
                                <div class="section-col-box">

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>Project includes (Check all that apply)</label>
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>
                                                <span class="chk_box">@Html.CheckBoxFor(m => m.IsConstructionExcavation, new { @class = "request_chk", @onchange = "changeProjectArea()" })</span>
                                                <span class="chk_txt">Construction / Excavation</span>
                                            </label>
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>
                                                <span class="chk_box">@Html.CheckBoxFor(m => m.IsRehabilitation, new { @class = "request_chk" })</span>
                                                <span class="chk_txt">Rehabilitation</span>
                                            </label>
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>
                                                <span class="chk_box">@Html.CheckBoxFor(m => m.IsDemolition, new { @class = "request_chk" })</span>
                                                <span class="chk_txt">Demolition</span>
                                            </label>
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>
                                                <span class="chk_box">@Html.CheckBoxFor(m => m.IsSaleOrTransfer, new { @class = "request_chk" })</span>
                                                <span class="chk_txt">Sale / Transfer</span>
                                            </label>
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>
                                                <span class="chk_box">@Html.CheckBoxFor(m => m.IsNonConstructionLoan, new { @class = "request_chk" })</span>
                                                <span class="chk_txt">Non Construction Loan</span>
                                            </label>
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>
                                                <span class="chk_box">@Html.CheckBoxFor(m => m.IsOther, new { @class = "request_chk", @onchange = "hideShowOtherDescription()" })</span>
                                                <span class="chk_txt">Other</span>
                                            </label>
                                        </div>
                                    </div>

                                    <div class="row form-group otherDesc">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.OtherDescription)
                                            @Html.EditorFor(m => m.OtherDescription, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.OtherDescription, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="section-col-box">
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.TotalProjectArea)
                                            @Html.EditorFor(m => m.TotalProjectArea, new { htmlAttributes = new { @class = "form-control", @disabled = true } })
                                            @Html.ValidationMessageFor(m => m.TotalProjectArea, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.TotalGroundDisturbance)
                                            @Html.EditorFor(m => m.TotalGroundDisturbance, new { htmlAttributes = new { @class = "form-control", @disabled = true } })
                                            @Html.ValidationMessageFor(m => m.TotalGroundDisturbance, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.IsMississippiLandmarks)
                                            <label class="radio_container">
                                                <span class="chk_box radio_radius">@Html.RadioButtonFor(m => m.IsMississippiLandmarks, true, new { @class = "request_chk" })</span>
                                                <span class="radio_txt">Yes</span>
                                            </label>

                                            <label class="radio_container">
                                                <span class="chk_box radio_radius">@Html.RadioButtonFor(m => m.IsMississippiLandmarks, false, new { @class = "request_chk" })</span>
                                                <span class="radio_txt">No</span>
                                            </label>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="col-md-4">
                                <div class="section-col-box">

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.IsHistoricOrGovtProperty)
                                            <label class="radio_container">
                                                <span class="chk_box radio_radius">@Html.RadioButtonFor(m => m.IsHistoricOrGovtProperty, 1, new { @class = "request_chk" })</span>
                                                <span class="radio_txt">Yes</span>
                                            </label>

                                            <label class="radio_container">
                                                <span class="chk_box radio_radius">@Html.RadioButtonFor(m => m.IsHistoricOrGovtProperty, 2, new { @class = "request_chk" })</span>
                                                <span class="radio_txt">No</span>
                                            </label>

                                            <label class="radio_container">
                                                <span class="chk_box radio_radius">@Html.RadioButtonFor(m => m.IsHistoricOrGovtProperty, 0, new { @class = "request_chk" })</span>
                                                <span class="radio_txt">Unsure</span>
                                            </label>
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(m => m.HistoricPropertyName)
                                            @Html.EditorFor(m => m.HistoricPropertyName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.HistoricPropertyName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <label>
                                                <span class="chk_box">@Html.CheckBoxFor(m => m.IsOldStructure, new { @class = "request_chk" })</span>
                                                <span class="chk_txt">Check if buildings or structures in the project area are 50 years or older</span>
                                            </label>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*<div class="row form-group">
                <div class="col-md-12">
                    <div class="section-box">
                        <h2>Attachments</h2>

                        <div class="row form-group">
                            <div class="col-md-12">
                                <div class="section-col-box-noheight">
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <span>Include the following information with this form.</span>
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <ul class="attached_docs">
                                                <li>Map - 7.5' USGS topograhic quad showing project boundary and Area of Potential Effect.</li>
                                                <li>Definition / Scope - Describe the project, including any ground disturbance and previous land use.</li>
                                                <li>Site Plans / Drawings - Indicate the location and age, if known, of all structures in the project area.</li>
                                                <li>Photographs - Attach photos showing the project site, including images of all structures keyed to a site plan.</li>
                                            </ul>
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <span>-OR-</span>
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <div class="row form-group">
                                                <div class="col-md-12">
                                                    <label>
                                                        <span class="chk_box">@Html.CheckBoxFor(m => m.IsDocumentSentViaEmail, new { @class = "request_chk", @onchange = "hideShowAttachmentBox()" })</span>
                                                        <span class="chk_txt">Documents will be sent via mail</span>
                                                    </label>
                                                </div>
                                                <div class="col-md-12" style="padding-left: 50px;">
                                                    Mail to:<br /><br />
                                                    Mississippi Department of archives and History<br />
                                                    Attn: Review and Compliance Officer<br />
                                                    PO Box 571<br />
                                                    Jackson, MS  39205

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row form-group attachmentBox">
                <div class="col-md-12">
                    <div class="section-box">
                        <div class="row form-group">
                            <div class="col-md-12">
                                <div class="section-col-box-noheight">

                                    <div class="row form-group">
                                        <div class="col-md-6">
                                            <h4>Attachments</h4>
                                        </div>
                                        <div class="col-md-6 text-right">
                                            <button type="button" class="btn btn-info" onclick="showAttachmentModal()">Add</button>
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <div class="table-responsive">
                                                <table class="table table-striped">
                                                    <thead>
                                                        <tr>
                                                            <th>File Type</th>
                                                            <th style="width:200px;word-break: break-all">File Name</th>
                                                            <th>Comment</th>
                                                            <th class="action_100">Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="attachmentBody"></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>

                                    @*<div class="row form-group">
                                            <div class="col-md-6 pull-left">
                                                <h4 class="records_disp">Showing 1 to 5 of 5 entries</h4>
                                            </div>
                                            <div class="col-md-6">
                                                <ul class="pagination pull-right">
                                                    <li class="page-item disabled">
                                                        <a class="page-link" href="#" tabindex="-1">Previous</a>
                                                    </li>

                                                    <li class="page-item active">
                                                        <a class="page-link" href="#">1 <span class="sr-only">(current)</span></a>
                                                    </li>

                                                    <li class="page-item">
                                                        <a class="page-link" href="#">Next</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>*@

            <div class="row form-group correspondenceBox">
                <div class="col-md-12">
                    <div class="section-box">
                        <div class="row form-group">
                            <div class="col-md-12">
                                <div class="section-col-box-noheight">

                                    <div class="row form-group">
                                        <div class="col-md-6">
                                            <h4>Letters</h4>
                                        </div>
                                        <div class="col-md-6 text-right">
                                        </div>
                                    </div>

                                    <div class="row form-group">
                                        <div class="col-md-12">
                                            <div class="table-responsive">
                                                <table class="table table-striped">
                                                    <thead>
                                                        <tr>
                                                            <th>Letter Type</th>
                                                            <th>Date</th>
                                                            <th class="action_min_300">Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="correspondenceBody"></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-8">
                </div>
                <div class="col-md-4 text-right">
                    <a class="btn btn-default" href="@Url.Action("Index", "Admin")">Back To List</a>
                    @if (Model.Status != Convert.ToInt16(RequestStatus.Returned))
                    {
                        <button type="submit" class="btn btn-info" onclick="return formSettings()">Update</button>
                    }
                    <button type="submit" class="btn btn-primary" onclick="return setStatus(@Convert.ToInt32(RequestStatus.Submitted))">Update and Submit</button>
                </div>
            </div>
        }
    </div>
</div>

<div class="modal fade" id="attachmentModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <div class="row">
                    <div class="col-md-6">
                        Upload File
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="row form-horizontal">
                    <div class="col-md-12">
                        <input type="hidden" id="attachmentId" />

                        <div class="row form-group" id="fileUploadBox">
                            <div class="col-md-12">
                                <input type="file" style="display:none" id="file" name="file" onchange="onSelect(files)">
                                <input type="button" class="btn btn-primary btn-sm" value="Choose Attachment" id="chooseFile" onclick="showFileBox()">
                                <span id="fileName">No file chosen.</span>
                                <br />
                                <span id="fileValidation" class="field-validation-valid text-danger" style="display:none">Please select file.</span>
                                <span id="sameFileValidation" class="field-validation-valid text-danger" style="display:none">File is already exist in the list.</span>
                            </div>
                        </div>

                        <div class="row form-group">
                            <div class="col-md-12">
                                <label>Comment</label>
                                <br />
                                <textarea id="attachmentComment" class="form-control" rows="7"></textarea>
                                <br />
                                <span id="commentValidation" class="field-validation-valid text-danger" style="display:none">The Comment field is required.</span>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="addFileBtn" class="btn btn-primary" onclick="saveFile()">Save</button>
                <button type="button" id="updateFileBtn" class="btn btn-primary" onclick="updateAttachment()">Update</button>
            </div>
        </div>
    </div>
</div>

@*<div class="modal fade" id="viewModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="row">
                        <div class="col-md-6">
                            File
                        </div>
                        <div class="col-md-6">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="row form-horizontal">
                        <div class="col-md-12">
                            <img id="imgFile" src="" width="580" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>*@

<div class="modal fade" id="correspondenceViewModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <div class="row">
                    <div class="col-md-6">
                        Correspondence
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="row form-horizontal">
                    <div class="col-md-12">
                        <object type="application/pdf" id="pdfCorrespondence" data="" width="100%" height="400">No Support</object>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<style type="text/css">
    .control-label {
        text-align: left !important;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>

<script type="text/javascript">

    var attachments = [];
    var currentFile = [];
    var base64Files = [];
    var currentBase64File;

    var correspondenceList = [];

    $(document).ready(function () {
        // Masking
        $('#Longitude').mask("-99.999999");
        $('#Latitude').mask("99.999999");

        $('#ProjectZip').mask("99999");
        $('#SubmittingContact_Zip').mask("99999");
        $('#SubmittingContact_Fax').mask("(999) 999-9999");
        $('#SubmittingContact_MobileNumber').mask("(999) 999-9999");
        $('#SubmittingContact_OfficeNumber').mask("(999) 999-9999");

        $('#ApplicantContact_Zip').mask("99999");
        $('#ApplicantContact_Fax').mask("(999) 999-9999");
        $('#ApplicantContact_MobileNumber').mask("(999) 999-9999");
        $('#ApplicantContact_OfficeNumber').mask("(999) 999-9999");

        // Remainin char count
        $('#counter').text(500 - $('#ProjectDescription').val().length);

        var requestStatus = '@Model.Status'
        if (requestStatus == '@(Convert.ToInt16(RequestStatus.Returned))') {
            $(".correspondenceBox").show();
        }
        else{
            $(".correspondenceBox").hide();
        }

        var dbAttachments = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Attachments));
        var dbCorrespondence = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.CorrespondenceList));

        for (var i = 0; i < dbAttachments.length; i++) {
            var attachment = { 'IsNew':false, 'Id': dbAttachments[i].AttachmentId, 'Name': dbAttachments[i].Name, 'Type': dbAttachments[i].Type, 'Comment': dbAttachments[i].Comment }
            attachments.push(attachment);
            base64Files.push({ 'IsNew':false, 'Id': dbAttachments[i].AttachmentId, 'Comment': dbAttachments[i].Comment })
        }

        for (var i = 0; i < dbCorrespondence.length; i++) {
            var correspondence = ({ 'CorrespondenceId':dbCorrespondence[i].CorrespondenceId, 'CorrespondenceTypeId':dbCorrespondence[i].CorrespondenceTypeId,'CorrespondenceType':dbCorrespondence[i].CorrespondenceTypeName,'Date':dbCorrespondence[i].Date, 'Body':dbCorrespondence[i].Body });
            correspondenceList.push(correspondence);
        }

        updateAttachmentList();
        updateCorrespondenceList();
        hideShowAttachmentBox();
        hideShowOtherDescription();
        changeProjectArea();

        if ($("#IsApplicantSameAsSubmitting").is(":checked")) {
            $(".ApplicantName").attr('readonly', true);
            $(".ApplicantCompany").attr('readonly', true);
            $(".ApplicantEmail").attr('readonly', true);
            $(".ApplicantAddress1").attr('readonly', true);
            $(".ApplicantAddress2").attr('readonly', true);
            $(".ApplicantCity").attr('readonly', true);
            $(".ApplicantStateId").attr('readonly', true);
            $(".ApplicantZip").attr('readonly', true);
            $(".ApplicantOfficeNumber").attr('readonly', true);
            $(".ApplicantMobileNumber").attr('readonly', true);
            $(".ApplicantFax").attr('readonly', true);
        }

    });

    function showAttachmentModal() {
        $("#file").val('');
        $("#fileUploadBox").show();
        $("#addFileBtn").show();
        $("#updateFileBtn").hide();

        $("#fileName").text('');
        $("#fileValidation").hide();
        $("#sameFileValidation").hide();
        $("#commentValidation").hide();
        $("#attachmentComment").val('');
        $("#attachmentModal").modal('show');
    }

    function showFileBox() {
        $("#file").click();
    }

    function onSelect(file) {
        $("#fileName").text(file[0].name);
        var fileNames = attachments.map(p=>p.Name);
        if ($.inArray(file[0].name, fileNames) != -1) {
            $("#sameFileValidation").show();
            $("#fileValidation").hide();
            return false;
        }
        $("#sameFileValidation").hide();
        currentBase64File = "";
        currentFile = [];
        currentFile.push({ 'Name': file[0].name, 'Type': file[0].type });
        $("#fileValidation").hide();
        getBase64(file[0]);
    }

    function saveFile() {
        if (currentFile.length <= 0) {
            $("#fileValidation").show();
            $("#sameFileValidation").hide();
            return false;
        }

        var fileNames = attachments.map(p=>p.Name);
        if ($.inArray(currentFile[0].Name, fileNames) != -1) {
            $("#sameFileValidation").show();
            return false;
        }

        if ($("#attachmentComment").val() == "" || $("#attachmentComment").val() == null) {
            $("#commentValidation").show();
            return false;
        }
        $("#commentValidation").hide();

        var attachmentCommentLength = $("#attachmentComment").val().length;
        if (attachmentCommentLength > 500) {
            toastr.error("Attachement comment must have maximum length of '500'.");
            return false;
        }

        var randomId = 0;
        randomId = generateRandomFileId();

        var attachment = { 'IsNew':true, 'Id': randomId, 'Name': currentFile[0].Name, 'Type': currentFile[0].Type, 'Comment': $("#attachmentComment").val() }
        attachments.push(attachment);
        $("#attachmentModal").modal('hide');

        base64Files.push({ 'IsNew':true, 'Id': randomId, 'File': currentBase64File, 'Name': currentFile[0].Name, 'Type': currentFile[0].Type, 'Comment': $("#attachmentComment").val() })
        currentFile = [];
        currentBase64File = "";

        toastr.success("Attachment saved successfully.");
        updateAttachmentList();
    }


    function editAttachment(id) {
        var record = attachments.filter(function (p) {
            return p.Id == id;
        })[0];

        $("#attachmentComment").val(record.Comment);
        $("#fileUploadBox").hide();
        $("#addFileBtn").hide();
        $("#sameFileValidation").hide();
        $("#commentValidation").hide();
        $("#updateFileBtn").show();
        $("#attachmentId").val(id);
        $("#attachmentModal").modal('show');
    }

    function updateAttachment() {
        if ($("#attachmentComment").val() == "" || $("#attachmentComment").val() == null) {
            $("#commentValidation").show();
            return false;
        }
        $("#commentValidation").hide();

        var attachmentCommentLength = $("#attachmentComment").val().length;
        if (attachmentCommentLength > 500) {
            toastr.error("Attachement comment must have maximum length of '500'.");
            return false;
        }

        var attachmentId = $("#attachmentId").val();

        var record = attachments.filter(function (p) {
            return p.Id == attachmentId;
        })[0];
        record.Comment = $("#attachmentComment").val();

        var base64Record = base64Files.filter(function (p) {
            return p.Id == attachmentId;
        })[0];
        base64Record.Comment = $("#attachmentComment").val();

        updateAttachmentList();
        toastr.success("Attachment updated successfully.");
        $("#attachmentModal").modal('hide');
    }

    //function viewAttachment(attachment) {
    //    var ext = attachment.substr(attachment.lastIndexOf('.')+1);
    //    if (ext == 'docx') {

    //    }
    //    else if (ext == 'png' || ext == 'jpg') {
    //        //$("#imgFile").attr('src',"/Attachments/22_agency.png");
    //        $("#imgFile").attr('src',"/Attachments/"+attachment);
    //    }
    //    else if (ext == 'pdf') {

    //    }

    //    $("#viewModal").modal('show');
    //    //$('#pdfModalObj').attr('data','');
    //    //$('#pdfModalImg').attr('src','/Attachments/'+attachment).show();
    //    //$("#viewModal").modal('show');
    //}

    function deleteAttachment(id) {
        bootbox.confirm({
            message: "Are you sure you want to delete this attachment?",
            title: "Delete Attachment",
            buttons: {
                confirm: {
                    label: '<i class="fa fa-check"></i> Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: '<i class="fa fa-times"></i> No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result) {
                    var record = attachments.filter(function (p) {
                        return p.Id == id;
                    })[0];

                    var indexOf = attachments.indexOf(record);
                    attachments.splice(indexOf, 1);

                    var base64Record = base64Files.filter(function (p) {
                        return p.Id == id;
                    })[0];

                    var indexOfBase64 = base64Files.indexOf(base64Record);
                    base64Files.splice(indexOfBase64, 1);

                    if (!record.IsNew) {
                        $.ajax({
                            //url:'/Submitter/DeleteAttachment/'+id,
                            url:'@Url.Action("DeleteAttachment", "Submitter")?Id=' + id,
                            type:'Get',
                            success:function (res) {
                                if (res) {

                                }
                            }
                        });
                    }

                    toastr.success("Attachment deleted successfully.");
                    updateAttachmentList();
                }
            }
        })

    }

    function updateAttachmentList() {
        var filesHtml = '';

        if (attachments.length > 0) {
            $("#IsDocumentSentViaEmail").attr('disabled',true);

            for (var i = 0; i < attachments.length; i++) {
                filesHtml += '<tr><td>';
                filesHtml += attachments[i].Type;
                filesHtml += '</td><td style="word-break: break-all">';
                filesHtml += attachments[i].Name;
                filesHtml += '</td><td>';
                filesHtml += attachments[i].Comment;
                @*filesHtml += '</td><td><button type="button" class="btn btn-primary btn-xs" title="View Attachment" onclick="viewAttachment(\''+@Model.RequestId+'_'+attachments[i].Name+'\')"><i class="fa fa-search"></i></button>  <button title="Edit Attachment" type="button" class="btn btn-primary btn-xs" onclick="editAttachment(' + attachments[i].Id + ')"><i class="fa fa-pencil"></i></button>  <button title="Delete Attachment" type="button" onclick="deleteAttachment(' + attachments[i].Id + ')" class="btn btn-danger btn-xs"><i class="fa fa-close"></i></button>';*@
                filesHtml += '</td><td><button title="Edit Attachment" type="button" class="btn btn-primary btn-xs" onclick="editAttachment(' + attachments[i].Id + ')"><i class="fa fa-pencil"></i></button>  <button title="Delete Attachment" type="button" onclick="deleteAttachment(' + attachments[i].Id + ')" class="btn btn-danger btn-xs"><i class="fa fa-close"></i></button>';
                filesHtml += '</td></tr>';
            }
        }
        else{
            $("#IsDocumentSentViaEmail").attr('disabled',false);
            filesHtml += '<tr class="text-center"><td colspan="4"><span style="font-size:20px;">No attachment found for this request.</span></td></tr>';
        }

        $("#attachmentBody").html(filesHtml);
    }

    function updateCorrespondenceList() {
        var correspondenceHtml = '';

        if (correspondenceList.length > 0) {
            for (var i = 0; i < correspondenceList.length; i++) {

                correspondenceHtml += '<tr><td>';
                correspondenceHtml += correspondenceList[i].CorrespondenceType;
                correspondenceHtml += '</td><td>';
                correspondenceHtml += correspondenceList[i].Date;
                correspondenceHtml += '</td><td><a class="btn btn-primary btn-xs" href="/Correspondence/'+correspondenceList[i].CorrespondenceId+'_'+correspondenceList[i].CorrespondenceType+'.docx"><i class="fa fa-download"></i>Download Docx</a> <button type="button"  onclick="viewCorrespondence(\''+correspondenceList[i].CorrespondenceId+'_'+correspondenceList[i].CorrespondenceType+'\')" class="btn btn-primary btn-xs"><i class="fa fa-search"></i> View Correspondence</button>';
                correspondenceHtml += '</td></tr>';
            }
        }
        else{
            correspondenceHtml += '<tr class="text-center"><td colspan="4"><span style="font-size:20px;">No correspondence found for this request.</span></td></tr>';
        }

        $("#correspondenceBody").html(correspondenceHtml);
    }

    function viewCorrespondence(correspondence) {
        $('#pdfCorrespondence').attr('data','/Correspondence/'+correspondence+'.pdf');
        $("#correspondenceViewModal").modal('show');
    }

    function setSameApplicantAddress() {
        if ($("#IsApplicantSameAsSubmitting").is(":checked")) {
            $(".ApplicantName").val($(".SubmittingName").val()).attr('readonly', true);
            $(".ApplicantCompany").val($(".SubmittingCompany").val()).attr('readonly', true);
            $(".ApplicantEmail").val($(".SubmittingEmail").val()).attr('readonly', true);
            $(".ApplicantAddress1").val($(".SubmittingAddress1").val()).attr('readonly', true);
            $(".ApplicantAddress2").val($(".SubmittingAddress2").val()).attr('readonly', true);
            $(".ApplicantCity").val($(".SubmittingCity").val()).attr('readonly', true);
            $(".ApplicantStateId").val($(".SubmittingStateId").val()).attr('readonly', true);
            $(".ApplicantZip").val($(".SubmittingZip").val()).attr('readonly', true);
            $(".ApplicantOfficeNumber").val($(".SubmittingOfficeNumber").val()).attr('readonly', true);
            $(".ApplicantMobileNumber").val($(".SubmittingMobileNumber").val()).attr('readonly', true);
            $(".ApplicantFax").val($(".SubmittingFax").val()).attr('readonly', true);
        }
        else {
            $(".ApplicantName").val('').attr('readonly', false);
            $(".ApplicantCompany").val('').attr('readonly', false);
            $(".ApplicantEmail").val('').attr('readonly', false);
            $(".ApplicantAddress1").val('').attr('readonly', false);
            $(".ApplicantAddress2").val('').attr('readonly', false);
            $(".ApplicantCity").val('').attr('readonly', false);
            $(".ApplicantStateId").val('').attr('readonly', false);
            $(".ApplicantZip").val('').attr('readonly', false);
            $(".ApplicantOfficeNumber").val('').attr('readonly', false);
            $(".ApplicantMobileNumber").val('').attr('readonly', false);
            $(".ApplicantFax").val('').attr('readonly', false);
        }
    }

    function changeProjectArea() {
        if ($("#IsConstructionExcavation").is(":checked")) {
            $("#TotalProjectArea").attr('disabled', false);
            $("#TotalGroundDisturbance").attr('disabled', false);

        }
        else {
            $("#TotalProjectArea").val('').attr('disabled', true);
            $("#TotalGroundDisturbance").val('').attr('disabled', true);
        }
    }

    function hideShowAttachmentBox() {
        if ($("#IsDocumentSentViaEmail").is(":checked")) {
            $(".attachmentBox").hide();
        }
        else {
            $(".attachmentBox").show();
        }
    }

    function hideShowOtherDescription() {
        if ($("#IsOther").is(":checked")) {
            $(".otherDesc").show();
        }
        else {
            $(".otherDesc").hide();
        }
    }

    function setStatus(value) {

        //setting status
        $("#Status").val(value);

        //setting attachments
        var finalAttachments = [];
        for (var i = 0; i < base64Files.length; i++) {
            if (base64Files[i].IsNew) {
                finalAttachments.push(base64Files[i].IsNew + "," + base64Files[i].File + "," + base64Files[i].Name + "," + base64Files[i].Type + "," + base64Files[i].Comment);
            }
            else{
                finalAttachments.push(base64Files[i].IsNew + "," + base64Files[i].Comment + "," + base64Files[i].Id);
            }
        }
        $("#AttachmentList").val(finalAttachments.join(";"));

        return true;
    }

    function formSettings() {
        //setting attachments
        var finalAttachments = [];
        for (var i = 0; i < base64Files.length; i++) {
            if (base64Files[i].IsNew) {
                finalAttachments.push(base64Files[i].IsNew + "," + base64Files[i].File + "," + base64Files[i].Name + "," + base64Files[i].Type + "," + base64Files[i].Comment);
            }
            else{
                finalAttachments.push(base64Files[i].IsNew + "," + base64Files[i].Comment + "," + base64Files[i].Id);
            }
        }
        $("#AttachmentList").val(finalAttachments.join(";"));
    }

    function getBase64(file) {
        var reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = function () {
            currentBase64File = reader.result.split(',')[1];
        };
        reader.onerror = function (error) {
            console.log('Error: ', error);
        };
    }

    function generateRandomFileId() {
        var number = Math.floor((Math.random() * 10000) + 1);
        if (checkIfAlreadyExist(number)) {
            generateRandomFileId();
        }
        return number;
    }

    function checkIfAlreadyExist(number) {
        return $.inArray(number, attachments) != -1;
    }


    function textCounter(field,field2,maxlimit)
    {
        var countfield = document.getElementById(field2);
        if ( field.value.length > maxlimit ) {
            field.value = field.value.substring( 0, maxlimit );
            return false;
        } else {
            $('#' + field2).text(maxlimit - field.value.length);
        }
    }
</script>